name: Flyway Migrations Demo

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  flyway-demo:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Start MySQL container
      run: |
        docker run -d \
          --name mysql-demo \
          -e MYSQL_ROOT_PASSWORD=root123 \
          -e MYSQL_DATABASE=subscribers_db \
          -e MYSQL_USER=subuser \
          -e MYSQL_PASSWORD=subpass \
          -p 3306:3306 \
          mysql:8.0

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to be ready..."
        timeout 120 bash -c 'until docker exec mysql-demo mysqladmin ping -h localhost -u root --silent; do echo "Waiting..."; sleep 2; done'
        echo "MySQL is ready!"

    - name: Debug MySQL container
      run: |
        echo "Checking MySQL container status:"
        docker ps
        echo "Checking MySQL logs:"
        docker logs mysql-demo
        echo "Testing MySQL connection with root (no password):"
        docker exec mysql-demo mysql -u root -e "SELECT 'Root connection successful' as status;"
        echo "Testing MySQL connection with subuser:"
        docker exec mysql-demo mysql -u subuser -psubpass -e "SELECT 'Subuser connection successful' as status;"

    - name: List available migration files
      run: |
        echo "Available migration files:"
        ls -la migrations/init/
        ls -la migrations/incremental/
        ls -la sql/

    - name: Run Flyway migrations using Docker
      run: |
        docker run --rm \
          --network container:mysql-demo \
          -v "${{ github.workspace }}/migrations/init:/flyway/sql" \
          -v "${{ github.workspace }}/flyway_demo.conf:/flyway/conf/flyway.conf" \
          flyway/flyway:9-alpine \
          migrate

    - name: Verify migration
      run: |
        docker exec mysql-demo mysql -u root subscribers_db -e "SHOW TABLES;"

    - name: Cleanup
      if: always()
      run: |
        docker stop mysql-demo || true
        docker rm mysql-demo || true
